{"version":3,"sources":["vg.js","Board.js","grids/Cell.js","grids/SqrGrid.js","grids/Tile.js","lib/LinkedList.js","lib/Signal.js","pathing/AStarFinder.js","pathing/PathUtil.js","utils/Loader.js","utils/MouseCaster.js","utils/Scene.js","utils/SelectionManager.js","utils/Tools.js"],"names":["vg","VERSION","PI","Math","TAU","DEG_TO_RAD","RAD_TO_DEG","SQRT3","sqrt","TILE","ENT","STR","HEX","SQR","ABS","Board","grid","finderConfig","Error","this","tiles","tileGroup","group","THREE","Object3D","overlay","finder","AStarFinder","Loader","init","setGrid","prototype","setEntityOnTile","entity","tile","pos","cellToPixel","cell","position","copy","y","heightOffset","setEntityOnTileWithOffset","xOffset","zOffset","console","log","x","z","addTile","i","indexOf","push","snapTileToGrid","add","mesh","removeTile","remove","splice","dispose","removeAllTiles","children","length","getTileAtCell","h","cellToHash","cells","snapToGrid","pixelToCell","getRandomTile","Tools","randomInt","findPath","startTile","endTile","heuristic","newGrid","forEach","t","generateOverlay","size","mat","LineBasicMaterial","color","opacity","generateTilemap","config","reset","generateTiles","constructor","Cell","q","r","s","userData","walkable","_calcCost","_priority","_visited","_parent","uniqueID","LinkedList","generateID","set","equals","SqrGrid","type","cellSize","numCells","extrudeSettings","autogenerated","verts","Vector3","cellShape","Shape","moveTo","lineTo","cellGeo","Geometry","vertices","verticesNeedUpdate","cellShapeGeo","ShapeGeometry","_fullCellSize","_hashDelimeter","_directions","_diagonals","_list","_vec3","_cel","_conversionVec","_geoCache","_matCache","round","getCellAt","getNeighbors","diagonal","filter","n","l","getRandomCell","c","distance","cellA","cellB","d","max","abs","clearPath","traverse","cb","generateTile","scale","material","height","geo","amount","ExtrudeGeometry","Tile","geometry","settings","tileScale","bevelEnabled","bevelSegments","steps","bevelSize","bevelThickness","merge","generateTilePoly","MeshBasicMaterial","Mesh","rotateOnAxis","generate","half","ceil","overlayObj","overlayMat","line","Line","rotation","load","url","callback","scope","getJSON","json","fromJSON","call","cache","toJSON","k","MeshPhongMaterial","randomizeRGB","objectType","selected","highlight","structure","emissive","_emissive","getHex","customizeTile","select","setHex","deselect","toggle","updateTerrain","updateCity","setTerrain","terrain","setCity","name","city","setCityPosition","colorString","Color","spriteConfig","container","board","sprite","Sprite","activate","parent","LinkedListNode","obj","next","prev","free","first","last","objToNodeMap","Date","now","floor","random","sortArray","toString","slice","getNode","addNode","node","err","error","swapObjects","newObj","showDebug","dump","has","moveUp","b","a","oldCNext","moveDown","sort","compare","clear","shift","pop","concat","list","msg","SignalBinding","signal","listener","isOnce","listenerContext","priority","_listener","context","active","params","execute","paramsArr","handlerReturn","apply","detach","isBound","_destroy","Signal","_bindings","_prevParams","self","dispatch","arguments","memorize","_shouldPropagate","validateListener","fnName","replace","_registerListener","binding","prevIndex","_indexOfListener","_addBinding","cur","addOnce","removeAll","getNumListeners","halt","bindings","Array","forget","allowDiagonal","heuristicFilter","startNode","endNode","current","costSoFar","neighbors","PathUtil","backtrace","nodeA","nodeB","path","reverse","biBacktrace","pathA","pathB","pathLength","dx","dy","sum","interpolate","x0","y0","x1","y1","sx","sy","e2","expandPath","coord0","coord1","interpolated","interpolatedLen","j","expanded","len","smoothenPath","ex","ey","newPath","lastValidCoord","coord","testCoord","blocked","isWalkableAt","compressPath","lx","ly","ldx","ldy","sq","compressed","px","py","manager","imageLoader","crossOrigin","LoadingManager","warn","ImageLoader","loadTexture","mapping","onLoad","onError","texture","Texture","image","needsUpdate","evt","sourceFile","MouseCaster","camera","element","down","rightDown","pickedObject","selectedObject","allHits","ctrl","wheel","screenPosition","Vector2","_camera","_raycaster","Raycaster","_preventDefault","document","addEventListener","_onDocumentMouseMove","bind","_onDocumentMouseDown","_onDocumentMouseUp","_onMouseWheel","OVER","OUT","DOWN","UP","CLICK","WHEEL","update","setFromCamera","hit","intersects","intersectObject","object","point","preventDefault","window","event","shiftKey","ctrlKey","which","clientX","innerWidth","clientY","innerHeight","stopPropagation","delta","undefined","wheelDelta","detail","Scene","sceneConfig","controlConfig","sceneSettings","body","alpha","antialias","clearColor","sortObjects","fog","light","DirectionalLight","lightPosition","cameraType","cameraPosition","orthoZoom","controlSettings","minDistance","maxDistance","zoomSpeed","noZoom","renderer","WebGLRenderer","setClearColor","width","AmbientLight","normalize","OrthographicCamera","PerspectiveCamera","contolled","controls","OrbitControls","domElement","left","right","top","bottom","aspect","updateProjectionMatrix","setSize","attachTo","style","setPixelRatio","devicePixelRatio","appendChild","render","updateOrthoZoom","focusOn","lookAt","SelectionManager","mouse","onSelect","onDeselect","toggleSelection","onMouse","fireSignal","clearSelection","clamp","val","min","sign","v","getShortRotation","angle","isPlainObject","nodeType","Object","hasOwnProperty","target","src","array","isArray","dst","e","keys","key","nwf","system","Performance","elapsedTime","performance","empty","lastChild","removeChild","radixSort","arr","idxBegin","idxEnd","bit","idx","idxOnes","mask","tmp","base","range","rgb","split","parseInt","substring","xhr","XMLHttpRequest","uri","onreadystatechange","status","JSON","parse","responseText","statusText","open","setRequestHeader","send"],"mappings":"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","file":"sqr-grid.min.js","sourcesContent":["var vg = { // eslint-disable-line\n\tVERSION: '0.1.1',\n\n\tPI: Math.PI,\n\tTAU: Math.PI * 2,\n\tDEG_TO_RAD: 0.0174532925,\n\tRAD_TO_DEG: 57.2957795,\n\tSQRT3: Math.sqrt(3), // used often in hex conversions\n\n\t// useful enums for type checking. change to whatever fits your game. these are just examples\n\tTILE: 'tile', // visual representation of a grid cell\n\tENT: 'entity', // dynamic things\n\tSTR: 'structure', // static things\n\n\tHEX: 'hex',\n\tSQR: 'square',\n\tABS: 'abstract'\n};","/*\n\tInterface to the grid. Holds data about the visual representation of the cells (tiles).\n\n\t@author Corey Birnbaum https://github.com/vonWolfehaus/\n */\nvg.Board = function(grid, finderConfig) {\n\tif (!grid) throw new Error('You must pass in a grid system for the board to use.');\n\n\tthis.tiles = [];\n\tthis.tileGroup = null; // only for tiles\n\n\tthis.group = new THREE.Object3D(); // can hold all entities, also holds tileGroup, never trashed\n\n\tthis.grid = null;\n\tthis.overlay = null;\n\tthis.finder = new vg.AStarFinder(finderConfig);\n\t// need to keep a resource cache around, so this Loader does that, use it instead of THREE.ImageUtils\n\tvg.Loader.init();\n\n\tthis.setGrid(grid);\n};\n\nvg.Board.prototype = {\n\tsetEntityOnTile: function(entity, tile) {\n\t\t// snap an entity's position to a tile; merely copies position\n\t\tvar pos = this.grid.cellToPixel(tile.cell);\n\t\tentity.position.copy(pos);\n\t\t// adjust for any offset after the entity was set directly onto the tile\n\t\tentity.position.y += entity.heightOffset || 0;\n\t\t// remove entity from old tile\n\t\tif (entity.tile) {\n\t\t\tentity.tile.entity = null;\n\t\t}\n\t\t// set new situation\n\t\tentity.tile = tile;\n\t\ttile.entity = entity;\n\t},\n\n  setEntityOnTileWithOffset: function(entity, tile, xOffset, zOffset) {\n\n\t  console.log('setEntityWithOffset')\n    // snap an entity's position to a tile; merely copies position\n    var pos = this.grid.cellToPixel(tile.cell);\n    entity.position.copy(pos);\n    // adjust for any offset after the entity was set directly onto the tile\n    entity.position.y += entity.heightOffset || 0;\n    entity.position.x += xOffset || 0;\n    entity.position.z += zOffset || 0;\n\n    console.log(\"entity.position.x: \", entity.position.x);\n    console.log(\"entity.position.y: \", entity.position.y);\n    console.log(\"entity.position.z: \", entity.position.z);\n\n    // remove entity from old tile\n    if (entity.tile) {\n      entity.tile.entity = null;\n    }\n    // set new situation\n    entity.tile = tile;\n    tile.entity = entity;\n  },\n\n\taddTile: function(tile) {\n\t\tvar i = this.tiles.indexOf(tile);\n\t\tif (i === -1) this.tiles.push(tile);\n\t\telse return;\n\n\t\tthis.snapTileToGrid(tile);\n\t\ttile.position.y = 0;\n\n\t\tthis.tileGroup.add(tile.mesh);\n\t\tthis.grid.add(tile.cell);\n\n\t\ttile.cell.tile = tile;\n\t},\n\n\tremoveTile: function(tile) {\n\t\tif (!tile) return; // was already removed somewhere\n\t\tvar i = this.tiles.indexOf(tile);\n\t\tthis.grid.remove(tile.cell);\n\n\t\tif (i !== -1) this.tiles.splice(i, 1);\n\t\t// this.tileGroup.remove(tile.mesh);\n\n\t\ttile.dispose();\n\t},\n\n\tremoveAllTiles: function() {\n\t\tif (!this.tileGroup) return;\n\t\tvar tiles = this.tileGroup.children;\n\t\tfor (var i = 0; i < tiles.length; i++) {\n\t\t\tthis.tileGroup.remove(tiles[i]);\n\t\t}\n\t},\n\n\tgetTileAtCell: function(cell) {\n\t\tvar h = this.grid.cellToHash(cell);\n\t\treturn cell.tile || (typeof this.grid.cells[h] !== 'undefined' ? this.grid.cells[h].tile : null);\n\t},\n\n\tsnapToGrid: function(pos) {\n\t\tvar cell = this.grid.pixelToCell(pos);\n\t\tpos.copy(this.grid.cellToPixel(cell));\n\t},\n\n\tsnapTileToGrid: function(tile) {\n\t\tif (tile.cell) {\n\t\t\ttile.position.copy(this.grid.cellToPixel(tile.cell));\n\t\t}\n\t\telse {\n\t\t\tvar cell = this.grid.pixelToCell(tile.position);\n\t\t\ttile.position.copy(this.grid.cellToPixel(cell));\n\t\t}\n\t\treturn tile;\n\t},\n\n\tgetRandomTile: function() {\n\t\tvar i = vg.Tools.randomInt(0, this.tiles.length-1);\n\t\treturn this.tiles[i];\n\t},\n\n\tfindPath: function(startTile, endTile, heuristic) {\n\t\treturn this.finder.findPath(startTile.cell, endTile.cell, heuristic, this.grid);\n\t},\n\n\tsetGrid: function(newGrid) {\n\t\tthis.group.remove(this.tileGroup);\n\t\tif (this.grid && newGrid !== this.grid) {\n\t\t\tthis.removeAllTiles();\n\t\t\tthis.tiles.forEach(function(t) {\n\t\t\t\tthis.grid.remove(t.cell);\n\t\t\t\tt.dispose();\n\t\t\t});\n\t\t\tthis.grid.dispose();\n\t\t}\n\t\tthis.grid = newGrid;\n\t\tthis.tiles = [];\n\t\tthis.tileGroup = new THREE.Object3D();\n\t\tthis.group.add(this.tileGroup);\n\t},\n\n\tgenerateOverlay: function(size) {\n\t\tvar mat = new THREE.LineBasicMaterial({\n\t\t\tcolor: 0x000000,\n\t\t\topacity: 0.3\n\t\t});\n\n\t\tif (this.overlay) {\n\t\t\tthis.group.remove(this.overlay);\n\t\t}\n\n\t\tthis.overlay = new THREE.Object3D();\n\n\t\tthis.grid.generateOverlay(size, this.overlay, mat);\n\n\t\tthis.group.add(this.overlay);\n\t},\n\n\tgenerateTilemap: function(config) {\n\t\tthis.reset();\n\n\t\tvar tiles = this.grid.generateTiles(config);\n\t\tthis.tiles = tiles;\n\n\t\tthis.tileGroup = new THREE.Object3D();\n\t\tfor (var i = 0; i < tiles.length; i++) {\n\t\t\tthis.tileGroup.add(tiles[i].mesh);\n\t\t}\n\n\t\tthis.group.add(this.tileGroup);\n\t},\n\n\treset: function() {\n\t\t// removes all tiles from the scene, but leaves the grid intact\n\t\tthis.removeAllTiles();\n\t\tif (this.tileGroup) this.group.remove(this.tileGroup);\n\t}\n};\n\nvg.Board.prototype.constructor = vg.Board;\n","/*\n\tSimple structure for holding grid coordinates and extra data about them.\n\n\t@author Corey Birnbaum https://github.com/vonWolfehaus/\n*/\nvg.Cell = function(q, r, s, h) {\n\tthis.q = q || 0; // x grid coordinate (using different letters so that it won't be confused with pixel/world coordinates)\n\tthis.r = r || 0; // y grid coordinate\n\tthis.s = s || 0; // z grid coordinate\n\tthis.h = h || 1; // 3D height of the cell, used by visual representation and pathfinder, cannot be less than 1\n\tthis.tile = null; // optional link to the visual representation's class instance\n\tthis.userData = {}; // populate with any extra data needed in your game\n\tthis.walkable = true; // if true, pathfinder will use as a through node\n\t// rest of these are used by the pathfinder and overwritten at runtime, so don't touch\n\tthis._calcCost = 0;\n\tthis._priority = 0;\n\tthis._visited = false;\n\tthis._parent = null;\n\tthis.uniqueID = vg.LinkedList.generateID();\n};\n\nvg.Cell.prototype = {\n\tset: function(q, r, s) {\n\t\tthis.q = q;\n\t\tthis.r = r;\n\t\tthis.s = s;\n\t\treturn this;\n\t},\n\n\tcopy: function(cell) {\n\t\tthis.q = cell.q;\n\t\tthis.r = cell.r;\n\t\tthis.s = cell.s;\n\t\tthis.h = cell.h;\n\t\tthis.tile = cell.tile || null;\n\t\tthis.userData = cell.userData || {};\n\t\tthis.walkable = cell.walkable;\n\t\treturn this;\n\t},\n\n\tadd: function(cell) {\n\t\tthis.q += cell.q;\n\t\tthis.r += cell.r;\n\t\tthis.s += cell.s;\n\t\treturn this;\n\t},\n\n\tequals: function(cell) {\n\t\treturn this.q === cell.q && this.r === cell.r && this.s === cell.s;\n\t}\n};\n\nvg.Cell.prototype.constructor = vg.Cell;\n","/*\n\tGraph of squares. Handles grid cell management (placement math for eg pathfinding, range, etc) and grid conversion math.\n\tInterface:\n\ttype\n\tsize - number of cells (in radius); only used if the map is generated\n\tcellSize\n\tcells - a hash so we can have sparse maps\n\tnumCells\n\textrudeSettings\n\tautogenerated\n\tcellShape\n\tcellGeo\n\tcellShapeGeo\n\n\t@author Corey Birnbaum https://github.com/vonWolfehaus/\n */\nvg.SqrGrid = function(config) {\n\tconfig = config || {};\n\t/*  ______________________________________________\n\t\tGRID INTERFACE:\n\t*/\n\tthis.type = vg.SQR;\n\tthis.size = 5; // only used for generated maps\n\tthis.cellSize = typeof config.cellSize === 'undefined' ? 10 : config.cellSize;\n\tthis.cells = {};\n\tthis.numCells = 0;\n\n\tthis.extrudeSettings = null;\n\tthis.autogenerated = false;\n\n\t// create base shape used for building geometry\n\tvar verts = [];\n\tverts.push(new THREE.Vector3());\n\tverts.push(new THREE.Vector3(-this.cellSize, this.cellSize));\n\tverts.push(new THREE.Vector3(this.cellSize, this.cellSize));\n\tverts.push(new THREE.Vector3(this.cellSize, -this.cellSize));\n\t// copy the verts into a shape for the geometry to use\n\tthis.cellShape = new THREE.Shape();\n\tthis.cellShape.moveTo(-this.cellSize, -this.cellSize);\n\tthis.cellShape.lineTo(-this.cellSize, this.cellSize);\n\tthis.cellShape.lineTo(this.cellSize, this.cellSize);\n\tthis.cellShape.lineTo(this.cellSize, -this.cellSize);\n\tthis.cellShape.lineTo(-this.cellSize, -this.cellSize);\n\n\tthis.cellGeo = new THREE.Geometry();\n\tthis.cellGeo.vertices = verts;\n\tthis.cellGeo.verticesNeedUpdate = true;\n\n\tthis.cellShapeGeo = new THREE.ShapeGeometry(this.cellShape);\n\n\t/*  ______________________________________________\n\t\tPRIVATE\n\t*/\n\n\tthis._fullCellSize = this.cellSize * 2;\n\tthis._hashDelimeter = '.';\n\t// pre-computed permutations\n\tthis._directions = [new vg.Cell(+1, 0, 0), new vg.Cell(0, -1, 0),\n\t\t\t\t\t\tnew vg.Cell(-1, 0, 0), new vg.Cell(0, +1, 0)];\n\tthis._diagonals = [new vg.Cell(-1, -1, 0), new vg.Cell(-1, +1, 0),\n\t\t\t\t\t   new vg.Cell(+1, +1, 0), new vg.Cell(+1, -1, 0)];\n\t// cached objects\n\tthis._list = [];\n\tthis._vec3 = new THREE.Vector3();\n\tthis._cel = new vg.Cell();\n\tthis._conversionVec = new THREE.Vector3();\n\tthis._geoCache = [];\n\tthis._matCache = [];\n};\n\nvg.SqrGrid.prototype = {\n\t/*\n\t\t________________________________________________________________________\n\t\tHigh-level functions that the Board interfaces with (all grids implement)\n\t */\n\n\tcellToPixel: function(cell) {\n\t\tthis._vec3.x = cell.q * this._fullCellSize;\n\t\tthis._vec3.y = cell.h;\n\t\tthis._vec3.z = cell.r * this._fullCellSize;\n\t\treturn this._vec3;\n\t},\n\n\tpixelToCell: function(pos) {\n\t\tvar q = Math.round(pos.x / this._fullCellSize);\n\t\tvar r = Math.round(pos.z / this._fullCellSize);\n\t\treturn this._cel.set(q, r, 0);\n\t},\n\n\tgetCellAt: function(pos) {\n\t\tvar q = Math.round(pos.x / this._fullCellSize);\n\t\tvar r = Math.round(pos.z / this._fullCellSize);\n\t\tthis._cel.set(q, r);\n\t\treturn this.cells[this.cellToHash(this._cel)];\n\t},\n\n\tgetNeighbors: function(cell, diagonal, filter) {\n\t\t// always returns an array\n\t\tvar i, n, l = this._directions.length;\n\t\tthis._list.length = 0;\n\t\tfor (i = 0; i < l; i++) {\n\t\t\tthis._cel.copy(cell);\n\t\t\tthis._cel.add(this._directions[i]);\n\t\t\tn = this.cells[this.cellToHash(this._cel)];\n\t\t\tif (!n || (filter && !filter(cell, n))) {\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tthis._list.push(n);\n\t\t}\n\t\tif (diagonal) {\n\t\t\tfor (i = 0; i < l; i++) {\n\t\t\t\tthis._cel.copy(cell);\n\t\t\t\tthis._cel.add(this._diagonals[i]);\n\t\t\t\tn = this.cells[this.cellToHash(this._cel)];\n\t\t\t\tif (!n || (filter && !filter(cell, n))) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\tthis._list.push(n);\n\t\t\t}\n\t\t}\n\t\treturn this._list;\n\t},\n\n\tgetRandomCell: function() {\n\t\tvar c, i = 0, x = vg.Tools.randomInt(0, this.numCells);\n\t\tfor (c in this.cells) {\n\t\t\tif (i === x) {\n\t\t\t\treturn this.cells[c];\n\t\t\t}\n\t\t\ti++;\n\t\t}\n\t\treturn this.cells[c];\n\t},\n\n\tcellToHash: function(cell) {\n\t\treturn cell.q+this._hashDelimeter+cell.r; // s is not used in a square grid\n\t},\n\n\tdistance: function(cellA, cellB) {\n\t\tvar d = Math.max(Math.abs(cellA.q - cellB.q), Math.abs(cellA.r - cellB.r));\n\t\td += cellB.h - cellA.h; // include vertical size\n\t\treturn d;\n\t},\n\n\tclearPath: function() {\n\t\tvar i, c;\n\t\tfor (i in this.cells) {\n\t\t\tc = this.cells[i];\n\t\t\tc._calcCost = 0;\n\t\t\tc._priority = 0;\n\t\t\tc._parent = null;\n\t\t\tc._visited = false;\n\t\t}\n\t},\n\n\ttraverse: function(cb) {\n\t\tvar i;\n\t\tfor (i in this.cells) {\n\t\t\tcb(this.cells[i]);\n\t\t}\n\t},\n\n\tgenerateTile: function(cell, scale, material) {\n\t\tvar height = Math.abs(cell.h);\n\t\tif (height < 1) height = 1;\n\n\t\tvar geo = this._geoCache[height];\n\t\tif (!geo) {\n\t\t\tthis.extrudeSettings.amount = height;\n\t\t\tgeo = new THREE.ExtrudeGeometry(this.cellShape, this.extrudeSettings);\n\t\t\tthis._geoCache[height] = geo;\n\t\t}\n\n\t\t/*mat = this._matCache[c.matConfig.mat_cache_id];\n\t\tif (!mat) { // MaterialLoader? we currently only support basic stuff though. maybe later\n\t\t\tmat.map = Loader.loadTexture(c.matConfig.imgURL);\n\t\t\tdelete c.matConfig.imgURL;\n\t\t\tmat = new THREE[c.matConfig.type](c.matConfig);\n\t\t\tthis._matCache[c.matConfig.mat_cache_id] = mat;\n\t\t}*/\n\n\t\tvar t = new vg.Tile({\n\t\t\tsize: this.cellSize,\n\t\t\tscale: scale,\n\t\t\tcell: cell,\n\t\t\tgeometry: geo,\n\t\t\tmaterial: material\n\t\t});\n\n\t\tcell.tile = t;\n\n\t\treturn t;\n\t},\n\n\tgenerateTiles: function(config) {\n\t\tconfig = config || {};\n\t\tvar tiles = [];\n\t\tvar settings = {\n\t\t\ttileScale: 0.95,\n\t\t\tcellSize: this.cellSize,\n\t\t\tmaterial: null,\n\t\t\textrudeSettings: {\n\t\t\t\tamount: 1,\n\t\t\t\tbevelEnabled: true,\n\t\t\t\tbevelSegments: 1,\n\t\t\t\tsteps: 1,\n\t\t\t\tbevelSize: 0.5,\n\t\t\t\tbevelThickness: 0.5\n\t\t\t}\n\t\t}\n\t\tsettings = vg.Tools.merge(settings, config);\n\n\t\t/*if (!settings.material) {\n\t\t\tsettings.material = new THREE.MeshPhongMaterial({\n\t\t\t\tcolor: vg.Tools.randomizeRGB('30, 30, 30', 10)\n\t\t\t});\n\t\t}*/\n\n\t\t// overwrite with any new dimensions\n\t\tthis.cellSize = settings.cellSize;\n\t\tthis._fullCellSize = this.cellSize * 2;\n\n\t\tthis.autogenerated = true;\n\t\tthis.extrudeSettings = settings.extrudeSettings;\n\n\t\tvar i, t, c;\n\t\tfor (i in this.cells) {\n\t\t\tc = this.cells[i];\n\t\t\tt = this.generateTile(c, settings.tileScale, settings.material);\n\t\t\tt.position.copy(this.cellToPixel(c));\n\t\t\tt.position.y = 0;\n\t\t\ttiles.push(t);\n\t\t}\n\t\treturn tiles;\n\t},\n\n\tgenerateTilePoly: function(material) {\n\t\tif (!material) {\n\t\t\tmaterial = new THREE.MeshBasicMaterial({color: 0x24b4ff});\n\t\t}\n\t\tvar mesh = new THREE.Mesh(this.cellShapeGeo, material);\n\t\tthis._vec3.set(1, 0, 0);\n\t\tmesh.rotateOnAxis(this._vec3, vg.PI/2);\n\t\treturn mesh;\n\t},\n\n\t// create a flat, square-shaped grid\n\tgenerate: function(config) {\n\t\tconfig = config || {};\n\t\tthis.size = typeof config.size === 'undefined' ? this.size : config.size;\n\t\tvar x, y, c;\n\t\tvar half = Math.ceil(this.size / 2);\n\t\tfor (x = -half; x < half; x++) {\n\t\t\tfor (y = -half; y < half; y++) {\n\t\t\t\tc = new vg.Cell(x, y + 1);\n\t\t\t\tthis.add(c);\n\t\t\t}\n\t\t}\n\t},\n\n\tgenerateOverlay: function(size, overlayObj, overlayMat) {\n\t\tvar x, y;\n\t\tvar half = Math.ceil(size / 2);\n\t\tfor (x = -half; x < half; x++) {\n\t\t\tfor (y = -half; y < half; y++) {\n\t\t\t\tthis._cel.set(x, y); // define the cell\n\t\t\t\tvar line = new THREE.Line(this.cellGeo, overlayMat);\n\t\t\t\tline.position.copy(this.cellToPixel(this._cel));\n\t\t\t\tline.rotation.x = 90 * vg.DEG_TO_RAD;\n\t\t\t\toverlayObj.add(line);\n\t\t\t}\n\t\t}\n\t},\n\n\tadd: function(cell) {\n\t\tvar h = this.cellToHash(cell);\n\t\tif (this.cells[h]) {\n\t\t\t// console.warn('A cell already exists there');\n\t\t\treturn;\n\t\t}\n\t\tthis.cells[h] = cell;\n\t\tthis.numCells++;\n\n\t\treturn cell;\n\t},\n\n\tremove: function(cell) {\n\t\tvar h = this.cellToHash(cell);\n\t\tif (this.cells[h]) {\n\t\t\tdelete this.cells[h];\n\t\t\tthis.numCells--;\n\t\t}\n\t},\n\n\tdispose: function() {\n\t\tthis.cells = null;\n\t\tthis.numCells = 0;\n\t\tthis.cellShape = null;\n\t\tthis.cellGeo.dispose();\n\t\tthis.cellGeo = null;\n\t\tthis.cellShapeGeo.dispose();\n\t\tthis.cellShapeGeo = null;\n\t\tthis._list = null;\n\t\tthis._vec3 = null;\n\t\tthis._conversionVec = null;\n\t\tthis._geoCache = null;\n\t\tthis._matCache = null;\n\t},\n\n\t/*\n\t\tLoad a grid from a parsed json object.\n\t\tjson = {\n\t\t\textrudeSettings,\n\t\t\tsize,\n\t\t\tcellSize,\n\t\t\tautogenerated,\n\t\t\tcells: [],\n\t\t\tmaterials: [\n\t\t\t\t{\n\t\t\t\t\tcache_id: 0,\n\t\t\t\t\ttype: 'MeshLambertMaterial',\n\t\t\t\t\tcolor, ambient, emissive, reflectivity, refractionRatio, wrapAround,\n\t\t\t\t\timgURL: url\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tcacheId: 1, ...\n\t\t\t\t}\n\t\t\t\t...\n\t\t\t]\n\t\t}\n\t*/\n\tload: function(url, callback, scope) {\n\t\tvg.Tools.getJSON({\n\t\t\turl: url,\n\t\t\tcallback: function(json) {\n\t\t\t\tthis.fromJSON(json);\n\t\t\t\tcallback.call(scope || null, json);\n\t\t\t},\n\t\t\tcache: false,\n\t\t\tscope: this\n\t\t});\n\t},\n\n\tfromJSON: function(json) {\n\t\tvar i, c;\n\t\tvar cells = json.cells;\n\n\t\tthis.cells = {};\n\t\tthis.numCells = 0;\n\n\t\tthis.size = json.size;\n\t\tthis.cellSize = json.cellSize;\n\t\tthis._fullCellSize = this.cellSize * 2;\n\t\tthis.extrudeSettings = json.extrudeSettings;\n\t\tthis.autogenerated = json.autogenerated;\n\n\t\tfor (i = 0; i < cells.length; i++) {\n\t\t\tc = new vg.Cell();\n\t\t\tc.copy(cells[i]);\n\t\t\tthis.add(c);\n\t\t}\n\t},\n\n\ttoJSON: function() {\n\t\tvar json = {\n\t\t\tsize: this.size,\n\t\t\tcellSize: this.cellSize,\n\t\t\textrudeSettings: this.extrudeSettings,\n\t\t\tautogenerated: this.autogenerated\n\t\t};\n\t\tvar cells = [];\n\t\tvar c, k;\n\n\t\tfor (k in this.cells) {\n\t\t\tc = this.cells[k];\n\t\t\tcells.push({\n\t\t\t\tq: c.q,\n\t\t\t\tr: c.r,\n\t\t\t\ts: c.s,\n\t\t\t\th: c.h,\n\t\t\t\twalkable: c.walkable,\n\t\t\t\tuserData: c.userData\n\t\t\t});\n\t\t}\n\t\tjson.cells = cells;\n\n\t\treturn json;\n\t}\n};\n\nvg.SqrGrid.prototype.constructor = vg.SqrGrid;\n","/*\n\tExample tile class that constructs its geometry for rendering and holds some gameplay properties.\n\n\t@author Corey Birnbaum https://github.com/vonWolfehaus/\n*/\nvg.Tile = function(config) {\n\tconfig = config || {};\n\tvar settings = {\n\t\tcell: null, // required vg.Cell\n\t\tgeometry: null, // required threejs geometry\n\t\tmaterial: null // not required but it would improve performance significantly\n\t};\n\tsettings = vg.Tools.merge(settings, config);\n\n\tif (!settings.cell || !settings.geometry) {\n\t\tthrow new Error('Missing vg.Tile configuration');\n\t}\n\n\tthis.cell = settings.cell;\n\tif (this.cell.tile && this.cell.tile !== this) this.cell.tile.dispose(); // remove whatever was there\n\tthis.cell.tile = this;\n\n\tthis.uniqueID = vg.Tools.generateID();\n\n\tthis.geometry = settings.geometry;\n\tthis.material = settings.material;\n\tif (!this.material) {\n\t\tthis.material = new THREE.MeshPhongMaterial({\n\t\t\tcolor: vg.Tools.randomizeRGB('30, 30, 30', 13)\n\t\t});\n\t}\n\n\tthis.objectType = vg.TILE;\n\tthis.entity = null;\n\tthis.userData = {};\n\n\tthis.selected = false;\n\tthis.highlight = '0x0084cc';\n\n\tthis.mesh = new THREE.Mesh(this.geometry, this.material);\n\tthis.mesh.userData.structure = this;\n\n\t// create references so we can control orientation through this (Tile), instead of drilling down\n\tthis.position = this.mesh.position;\n\tthis.rotation = this.mesh.rotation;\n\n\t// rotate it to face \"up\" (the threejs coordinate space is Y+)\n\tthis.rotation.x = -90 * vg.DEG_TO_RAD;\n\tthis.mesh.scale.set(settings.scale, settings.scale, 1);\n\n\tif (this.material.emissive) {\n\t\tthis._emissive = this.material.emissive.getHex();\n\t}\n\telse {\n\t\tthis._emissive = null;\n\t}\n\n\tthis.customizeTile();\n};\n\nvg.Tile.prototype = {\n\tselect: function() {\n\t\tif (this.material.emissive) {\n\t\t\tthis.material.emissive.setHex(this.highlight);\n\t\t}\n\t\tthis.selected = true;\n\t\treturn this;\n\t},\n\n\tdeselect: function() {\n\t\tif (this._emissive !== null && this.material.emissive) {\n\t\t\tthis.material.emissive.setHex(this._emissive);\n\t\t}\n\t\tthis.selected = false;\n\t\treturn this;\n\t},\n\n\ttoggle: function() {\n\t\tif (this.selected) {\n\t\t\tthis.deselect();\n\t\t}\n\t\telse {\n\t\t\tthis.select();\n\t\t}\n\t\treturn this;\n\t},\n\n  customizeTile: function() {\n    this.updateTerrain();\n    this.updateCity();\n  },\n\n\n  // setters\n  setTerrain: function(terrain) {\n\t  this.cell.userData.terrain = terrain;\n\t  this.customizeTile();\n  },\n\n  setCity: function(name) {\n    this.cell.userData.city = this.cell.userData.city || {};\n    this.cell.userData.city.name = name;\n    this.customizeTile();\n  },\n\n  setCityPosition: function(position) {\n    this.cell.userData.city = this.cell.userData.city || {};\n    this.cell.userData.city.position = position;\n    this.customizeTile();\n  },\n\n  // customizers\n  updateTerrain: function() {\n\t  var terrain = this.cell.userData.terrain;\n    var colorString = \"rgb(30, 30, 30)\";\n\n    if(terrain === \"forest\") {\n      colorString = \"rgb(89, 160, 72)\";\n    } else if(terrain === \"farm\") {\n      colorString = \"rgb(237, 208, 23)\";\n    } else if(terrain === \"hills\") {\n      colorString = \"rgb(183, 160, 115)\";\n    }\n\n    this.material.color = new THREE.Color( colorString );\n  },\n\n  updateCity: function() {\n    var city = this.cell.userData.city;\n    if (city && city.name && city.name.length > 0) {\n      var spriteConfig = {\n        container: board.group,\n        url: '../examples/img/water.png',\n        scale: 3,\n        heightOffset: 2\n      };\n\n      this.sprite = this.sprite || new Sprite(spriteConfig);\n      this.sprite.activate(0, 3, 0);\n\n      var xOffset = 0;\n      var zOffset = 0;\n\n      if (city && city.position) {\n        if (city.position === 1) {\n          xOffset = 5;\n          zOffset = -9;\n        } else if (city.position === 2) {\n          xOffset = 10;\n          zOffset = 0;\n        } else if (city.position === 3) {\n          xOffset = 5;\n          zOffset = 9;\n        } else if (city.position === 4) {\n          xOffset = -5;\n          zOffset = 9;\n        } else if (city.position === 5) {\n          xOffset = -10;\n          zOffset = 0;\n        } else if (city.position === 6) {\n          xOffset = -5;\n          zOffset = -9;\n        }\n      }\n\n      console.log(\"xOffset: \", xOffset);\n      console.log(\"zOffset: \", zOffset);\n      board.setEntityOnTileWithOffset(this.sprite, this, xOffset, zOffset);\n    }\n  },\n\n\tdispose: function() {\n\t\tif (this.cell && this.cell.tile) this.cell.tile = null;\n\t\tthis.cell = null;\n\t\tthis.position = null;\n\t\tthis.rotation = null;\n\t\tif (this.mesh.parent) this.mesh.parent.remove(this.mesh);\n\t\tthis.mesh.userData.structure = null;\n\t\tthis.mesh = null;\n\t\tthis.material = null;\n\t\tthis.userData = null;\n\t\tthis.entity = null;\n\t\tthis.geometry = null;\n\t\tthis._emissive = null;\n\t}\n};\n\nvg.Tile.prototype.constructor = vg.Tile;\n","/*\n\tA high-speed doubly-linked list of objects. Note that for speed reasons (using a dictionary lookup of\n\tcached nodes) there can only be a single instance of an object in the list at the same time. Adding the same\n\tobject a second time will result in a silent return from the add method.\n\n\tIn order to keep a track of node links, an object must be able to identify itself with a uniqueID function.\n\n\tTo add an item use:\n\t<pre><code>\n\t\tlist.add(newItem);\n\t</code></pre>\n\t<p>\n\tYou can iterate using the first and next members, such as:\n\t<pre><code>\n\t\tvar node = list.first;\n\t\twhile (node)\n\t\t{\n\t\t\tnode.object().DOSOMETHING();\n\t\t\tnode = node.next();\n\t\t}\n\t</code></pre>\n */\n(function() {\n\tvar LinkedListNode = function() {\n\t\tthis.obj = null;\n\t\tthis.next = null;\n\t\tthis.prev = null;\n\t\tthis.free = true;\n\t};\n\n\tvar LinkedList = function() {\n\t\tthis.first = null;\n\t\tthis.last = null;\n\t\tthis.length = 0;\n\t\tthis.objToNodeMap = {}; // a quick lookup list to map linked list nodes to objects\n\t\tthis.uniqueID = Date.now() + '' + Math.floor(Math.random()*1000);\n\n\t\tthis.sortArray = [];\n\t};\n\n\t// static function for utility\n\tLinkedList.generateID = function() {\n\t\treturn Math.random().toString(36).slice(2) + Date.now();\n\t};\n\n\tLinkedList.prototype = {\n\t\t/*\n\t\t\tGet the LinkedListNode for this object.\n\t\t\t@param obj The object to get the node for\n\t\t */\n\t\tgetNode: function(obj) {\n\t\t\t// objects added to a list must implement a uniqueID which returns a unique object identifier string\n\t\t\treturn this.objToNodeMap[obj.uniqueID];\n\t\t},\n\n\t\t/*\n\t\t\tAdds a new node to the list -- typically only used internally unless you're doing something funky\n\t\t\tUse add() to add an object to the list, not this.\n\t\t */\n\t\taddNode: function(obj) {\n\t\t\tvar node = new LinkedListNode();\n\t\t\tif (!obj.uniqueID) {\n\t\t\t\ttry {\n\t\t\t\t\tobj.uniqueID = LinkedList.generateID();\n\t\t\t\t\t// console.log('New ID: '+obj.uniqueID);\n\t\t\t\t}\n\t\t\t\tcatch (err) {\n\t\t\t\t\tconsole.error('[LinkedList.addNode] obj passed is immutable: cannot attach necessary identifier');\n\t\t\t\t\treturn null;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tnode.obj = obj;\n\t\t\tnode.free = false;\n\t\t\tthis.objToNodeMap[obj.uniqueID] = node;\n\t\t\treturn node;\n\t\t},\n\n\t\tswapObjects: function(node, newObj) {\n\t\t\tthis.objToNodeMap[node.obj.uniqueID] = null;\n\t\t\tthis.objToNodeMap[newObj.uniqueID] = node;\n\t\t\tnode.obj = newObj;\n\t\t},\n\n\t\t/*\n\t\t\tAdd an item to the list\n\t\t\t@param obj The object to add\n\t\t */\n\t\tadd: function(obj) {\n\t\t\tvar node = this.objToNodeMap[obj.uniqueID];\n\n\t\t\tif (!node) {\n\t\t\t\tnode = this.addNode(obj);\n\t\t\t}\n\t\t\telse {\n\t\t\t\tif (node.free === false) return;\n\n\t\t\t\t// reusing a node, so we clean it up\n\t\t\t\t// this caching of node/object pairs is the reason an object can only exist\n\t\t\t\t// once in a list -- which also makes things faster (not always creating new node\n\t\t\t\t// object every time objects are moving on and off the list\n\t\t\t\tnode.obj = obj;\n\t\t\t\tnode.free = false;\n\t\t\t\tnode.next = null;\n\t\t\t\tnode.prev = null;\n\t\t\t}\n\n\t\t\t// append this obj to the end of the list\n\t\t\tif (!this.first) { // is this the first?\n\t\t\t\tthis.first = node;\n\t\t\t\tthis.last = node;\n\t\t\t\tnode.next = null; // clear just in case\n\t\t\t\tnode.prev = null;\n\t\t\t}\n\t\t\telse {\n\t\t\t\tif (!this.last) {\n\t\t\t\t\tthrow new Error(\"[LinkedList.add] No last in the list -- that shouldn't happen here\");\n\t\t\t\t}\n\n\t\t\t\t// add this entry to the end of the list\n\t\t\t\tthis.last.next = node; // current end of list points to the new end\n\t\t\t\tnode.prev = this.last;\n\t\t\t\tthis.last = node;            // new object to add becomes last in the list\n\t\t\t\tnode.next = null;      // just in case this was previously set\n\t\t\t}\n\t\t\tthis.length++;\n\n\t\t\tif (this.showDebug) this.dump('after add');\n\t\t},\n\n\t\thas: function(obj) {\n\t\t\treturn !!this.objToNodeMap[obj.uniqueID];\n\t\t},\n\n\t\t/*\n\t\t\tMoves this item upwards in the list\n\t\t\t@param obj\n\t\t */\n\t\tmoveUp: function(obj) {\n\t\t\tthis.dump('before move up');\n\t\t\tvar c = this.getNode(obj);\n\t\t\tif (!c) throw \"Oops, trying to move an object that isn't in the list\";\n\t\t\tif (!c.prev) return; // already first, ignore\n\n\t\t\t// This operation makes C swap places with B:\n\t\t\t// A <-> B <-> C <-> D\n\t\t\t// A <-> C <-> B <-> D\n\n\t\t\tvar b = c.prev;\n\t\t\tvar a = b.prev;\n\n\t\t\t// fix last\n\t\t\tif (c == this.last) this.last = b;\n\n\t\t\tvar oldCNext = c.next;\n\n\t\t\tif (a) a.next = c;\n\t\t\tc.next = b;\n\t\t\tc.prev = b.prev;\n\n\t\t\tb.next = oldCNext;\n\t\t\tb.prev = c;\n\n\t\t\t// check to see if we are now first\n\t\t\tif (this.first == b) this.first = c;\n\t\t},\n\n\t\t/*\n\t\t\tMoves this item downwards in the list\n\t\t\t@param obj\n\t\t */\n\t\tmoveDown: function(obj) {\n\t\t\tvar b = this.getNode(obj);\n\t\t\tif (!b) throw \"Oops, trying to move an object that isn't in the list\";\n\t\t\tif (!b.next) return; // already last, ignore\n\n\t\t\t// This operation makes B swap places with C:\n\t\t\t// A <-> B <-> C <-> D\n\t\t\t// A <-> C <-> B <-> D\n\n\t\t\tvar c = b.next;\n\t\t\tthis.moveUp(c.obj);\n\n\t\t\t// check to see if we are now last\n\t\t\tif (this.last == c) this.last = b;\n\t\t},\n\n\t\t/*\n\t\t\tTake everything off the list and put it in an array, sort it, then put it back.\n\t\t */\n\t\tsort: function(compare) {\n\t\t\tvar sortArray = this.sortArray;\n\t\t\tvar i, l, node = this.first;\n\t\t\tsortArray.length = 0;\n\n\t\t\twhile (node) {\n\t\t\t\tsortArray.push(node.obj);\n\t\t\t\tnode = node.next;\n\t\t\t}\n\n\t\t\tthis.clear();\n\n\t\t\tsortArray.sort(compare);\n\t\t\t// console.log(sortArray);\n\t\t\tl = sortArray.length;\n\t\t\tfor (i = 0; i < l; i++) {\n\t\t\t\tthis.add(sortArray[i]);\n\t\t\t}\n\t\t},\n\n\t\t/*\n\t\t\tRemoves an item from the list\n\t\t\t@param obj The object to remove\n\t\t\t@returns boolean true if the item was removed, false if the item was not on the list\n\t\t */\n\t\tremove: function(obj) {\n\t\t\tvar node = this.getNode(obj);\n\t\t\tif (!node || node.free){\n\t\t\t\treturn false; // ignore this error (trying to remove something not there)\n\t\t\t}\n\n\t\t\t// pull this object out and tie up the ends\n\t\t\tif (node.prev) node.prev.next = node.next;\n\t\t\tif (node.next) node.next.prev = node.prev;\n\n\t\t\t// fix first and last\n\t\t\tif (!node.prev) // if this was first on the list\n\t\t\t\tthis.first = node.next; // make the next on the list first (can be null)\n\t\t\tif (!node.next) // if this was the last\n\t\t\t\tthis.last = node.prev; // then this node's previous becomes last\n\n\t\t\tnode.free = true;\n\t\t\tnode.prev = null;\n\t\t\tnode.next = null;\n\n\t\t\tthis.length--;\n\n\t\t\treturn true;\n\t\t},\n\n\t\t// remove the head and return it's object\n\t\tshift: function() {\n\t\t\tvar node = this.first;\n\t\t\tif (this.length === 0) return null;\n\t\t\t// if (node == null || node.free == true) return null;\n\n\t\t\t// pull this object out and tie up the ends\n\t\t\tif (node.prev) {\n\t\t\t\tnode.prev.next = node.next;\n\t\t\t}\n\t\t\tif (node.next) {\n\t\t\t\tnode.next.prev = node.prev;\n\t\t\t}\n\n\t\t\t// make the next on the list first (can be null)\n\t\t\tthis.first = node.next;\n\t\t\tif (!node.next) this.last = null; // make sure we clear this\n\n\t\t\tnode.free = true;\n\t\t\tnode.prev = null;\n\t\t\tnode.next = null;\n\n\t\t\tthis.length--;\n\t\t\treturn node.obj;\n\t\t},\n\n\t\t// remove the tail and return it's object\n\t\tpop: function() {\n\t\t\tvar node = this.last;\n\t\t\tif (this.length === 0) return null;\n\n\t\t\t// pull this object out and tie up the ends\n\t\t\tif (node.prev) {\n\t\t\t\tnode.prev.next = node.next;\n\t\t\t}\n\t\t\tif (node.next) {\n\t\t\t\tnode.next.prev = node.prev;\n\t\t\t}\n\n\t\t\t// this node's previous becomes last\n\t\t\tthis.last = node.prev;\n\t\t\tif (!node.prev) this.first = null; // make sure we clear this\n\n\t\t\tnode.free = true;\n\t\t\tnode.prev = null;\n\t\t\tnode.next = null;\n\n\t\t\tthis.length--;\n\t\t\treturn node.obj;\n\t\t},\n\n\t\t/**\n\t\t * Add the passed list to this list, leaving it untouched.\n\t\t */\n\t\tconcat: function(list) {\n\t\t\tvar node = list.first;\n\t\t\twhile (node) {\n\t\t\t\tthis.add(node.obj);\n\t\t\t\tnode = node.next;\n\t\t\t}\n\t\t},\n\n\t\t/**\n\t\t * Clears the list out\n\t\t */\n\t\tclear: function() {\n\t\t\tvar next = this.first;\n\n\t\t\twhile (next) {\n\t\t\t\tnext.free = true;\n\t\t\t\tnext = next.next;\n\t\t\t}\n\n\t\t\tthis.first = null;\n\t\t\tthis.length = 0;\n\t\t},\n\n\t\tdispose: function() {\n\t\t\tvar next = this.first;\n\n\t\t\twhile (next) {\n\t\t\t\tnext.obj = null;\n\t\t\t\tnext = next.next;\n\t\t\t}\n\t\t\tthis.first = null;\n\n\t\t\tthis.objToNodeMap = null;\n\t\t},\n\n\t\t/*\n\t\t\tOutputs the contents of the current list for debugging.\n\t\t */\n\t\tdump: function(msg) {\n\t\t\tconsole.log('====================' + msg + '=====================');\n\t\t\tvar a = this.first;\n\t\t\twhile (a) {\n\t\t\t\tconsole.log(\"{\" + a.obj.toString() + \"} previous=\" + (a.prev ? a.prev.obj : \"NULL\"));\n\t\t\t\ta = a.next();\n\t\t\t}\n\t\t\tconsole.log(\"===================================\");\n\t\t\tconsole.log(\"Last: {\" + (this.last ? this.last.obj : 'NULL') + \"} \" +\n\t\t\t\t\"First: {\" + (this.first ? this.first.obj : 'NULL') + \"}\");\n\t\t}\n\t};\n\n\tLinkedList.prototype.constructor = LinkedList;\n\n\tvg.LinkedList = LinkedList;\n}());","(function() {\n    var SignalBinding = function (signal, listener, isOnce, listenerContext, priority) {\n        /**\n        * @property _listener - Handler function bound to the signal.\n        * @private\n        */\n        this._listener = listener;\n\n        /**\n        * @property {boolean} isOnce - If binding should be executed just once.\n        * @private\n        */\n        this.isOnce = isOnce;\n\n        /**\n        * @property {object|undefined|null} context - Context on which listener will be executed (object that should represent the `this` variable inside listener function).\n        */\n        this.context = listenerContext;\n\n        /**\n        * @property {Signal} signal - Reference to Signal object that listener is currently bound to.\n        * @private\n        */\n        this.signal = signal;\n\n        /**\n        * @property {number} _priority - Listener priority.\n        * @private\n        */\n        this._priority = priority || 0;\n    };\n\n    SignalBinding.prototype = {\n        /**\n        * If binding is active and should be executed.\n        * @property {boolean} active\n        * @default\n        */\n        active: true,\n\n        /**\n        * Default parameters passed to listener during `Signal.dispatch` and `SignalBinding.execute` (curried parameters).\n        * @property {array|null} params\n        * @default\n        */\n        params: null,\n\n        /**\n        * Call listener passing arbitrary parameters.\n        * If binding was added using `Signal.addOnce()` it will be automatically removed from signal dispatch queue, this method is used internally for the signal dispatch.\n        * @method SignalBinding#execute\n        * @param {array} [paramsArr] - Array of parameters that should be passed to the listener.\n        * @return {any} Value returned by the listener.\n        */\n        execute: function(paramsArr) {\n\n            var handlerReturn, params;\n\n            if (this.active && !!this._listener) {\n                params = this.params ? this.params.concat(paramsArr) : paramsArr;\n                handlerReturn = this._listener.apply(this.context, params);\n\n                if (this.isOnce) {\n                    this.detach();\n                }\n            }\n\n            return handlerReturn;\n\n        },\n\n        /**\n        * Detach binding from signal.\n        * alias to: @see mySignal.remove(myBinding.listener);\n        * @method SignalBinding#detach\n        * @return {function|null} Handler function bound to the signal or `null` if binding was previously detached.\n        */\n        detach: function () {\n            return this.isBound() ? this.signal.remove(this._listener, this.context) : null;\n        },\n\n        /**\n        * @method SignalBinding#isBound\n        * @return {boolean} True if binding is still bound to the signal and has a listener.\n        */\n        isBound: function () {\n            return (!!this.signal && !!this._listener);\n        },\n\n        /**\n        * Delete instance properties\n        * @method SignalBinding#_destroy\n        * @private\n        */\n        _destroy: function () {\n            delete this.signal;\n            delete this._listener;\n            delete this.context;\n        },\n\n        /**\n        * @method SignalBinding#toString\n        * @return {string} String representation of the object.\n        */\n        toString: function () {\n            return '[SignalBinding isOnce:' + this.isOnce +', isBound:'+ this.isBound() +', active:' + this.active + ']';\n        }\n    };\n\n    SignalBinding.prototype.constructor = SignalBinding;\n\n\n\n    /**\n    * @author       Miller Medeiros http://millermedeiros.github.com/js-signals/\n    * @author       Richard Davey <rich@photonstorm.com>\n    * @copyright    2014 Photon Storm Ltd.\n    * @license      {@link https://github.com/photonstorm/phaser/blob/master/license.txt|MIT License}\n    */\n\n    /**\n    * A Signal is used for object communication via a custom broadcaster instead of Events.\n    *\n    * @class Signal\n    * @constructor\n    */\n    var Signal = function () {\n        /**\n        * @property {Array.<SignalBinding>} _bindings - Internal variable.\n        * @private\n        */\n        this._bindings = [];\n\n        /**\n        * @property {any} _prevParams - Internal variable.\n        * @private\n        */\n        this._prevParams = null;\n\n        // enforce dispatch to aways work on same context (#47)\n        var self = this;\n\n        /**\n        * @property {function} dispatch - The dispatch function is what sends the Signal out.\n        */\n        this.dispatch = function(){\n            Signal.prototype.dispatch.apply(self, arguments);\n        };\n\n    };\n\n    Signal.prototype = {\n        /**\n        * If Signal should keep record of previously dispatched parameters and\n        * automatically execute listener during `add()`/`addOnce()` if Signal was\n        * already dispatched before.\n        * @property {boolean} memorize\n        */\n        memorize: false,\n\n        /**\n        * @property {boolean} _shouldPropagate\n        * @private\n        */\n        _shouldPropagate: true,\n\n        /**\n        * If Signal is active and should broadcast events.\n        * IMPORTANT: Setting this property during a dispatch will only affect the next dispatch, if you want to stop the propagation of a signal use `halt()` instead.\n        * @property {boolean} active\n        * @default\n        */\n        active: true,\n\n        /**\n        * @method Signal#validateListener\n        * @param {function} listener - Signal handler function.\n        * @param {string} fnName - Function name.\n        * @private\n        */\n        validateListener: function (listener, fnName) {\n            if (typeof listener !== 'function') {\n                throw new Error('Signal: listener is a required param of {fn}() and should be a Function.'.replace('{fn}', fnName));\n            }\n        },\n\n        /**\n        * @method Signal#_registerListener\n        * @private\n        * @param {function} listener - Signal handler function.\n        * @param {boolean} isOnce - Should the listener only be called once?\n        * @param {object} [listenerContext] - The context under which the listener is invoked.\n        * @param {number} [priority] - The priority level of the event listener. Listeners with higher priority will be executed before listeners with lower priority. Listeners with same priority level will be executed at the same order as they were added. (default = 0).\n        * @return {SignalBinding} An Object representing the binding between the Signal and listener.\n        */\n        _registerListener: function (listener, isOnce, listenerContext, priority) {\n            var prevIndex = this._indexOfListener(listener, listenerContext);\n            var binding;\n\n            if (prevIndex !== -1) {\n                binding = this._bindings[prevIndex];\n\n                if (binding.isOnce !== isOnce) {\n                    throw new Error('You cannot add' + (isOnce ? '' : 'Once') + '() then add' + (!isOnce ? '' : 'Once') + '() the same listener without removing the relationship first.');\n                }\n            }\n            else {\n                binding = new SignalBinding(this, listener, isOnce, listenerContext, priority);\n                this._addBinding(binding);\n            }\n\n            if (this.memorize && this._prevParams) {\n                binding.execute(this._prevParams);\n            }\n\n            return binding;\n        },\n\n        /**\n        * @method Signal#_addBinding\n        * @private\n        * @param {SignalBinding} binding - An Object representing the binding between the Signal and listener.\n        */\n        _addBinding: function (binding) {\n            //  Simplified insertion sort\n            var n = this._bindings.length;\n\n            do {\n                n--;\n            }\n            while (this._bindings[n] && binding._priority <= this._bindings[n]._priority);\n\n            this._bindings.splice(n + 1, 0, binding);\n        },\n\n        /**\n        * @method Signal#_indexOfListener\n        * @private\n        * @param {function} listener - Signal handler function.\n        * @return {number} The index of the listener within the private bindings array.\n        */\n        _indexOfListener: function (listener, context) {\n            var n = this._bindings.length;\n            var cur;\n\n            while (n--) {\n                cur = this._bindings[n];\n\n                if (cur._listener === listener && cur.context === context) {\n                    return n;\n                }\n            }\n\n            return -1;\n        },\n\n        /**\n        * Check if listener was attached to Signal.\n        *\n        * @method Signal#has\n        * @param {function} listener - Signal handler function.\n        * @param {object} [context] - Context on which listener will be executed (object that should represent the `this` variable inside listener function).\n        * @return {boolean} If Signal has the specified listener.\n        */\n        has: function (listener, context) {\n            return this._indexOfListener(listener, context) !== -1;\n        },\n\n        /**\n        * Add a listener to the signal.\n        *\n        * @method Signal#add\n        * @param {function} listener - The function to call when this Signal is dispatched.\n        * @param {object} [listenerContext] - The context under which the listener will be executed (i.e. the object that should represent the `this` variable).\n        * @param {number} [priority] - The priority level of the event listener. Listeners with higher priority will be executed before listeners with lower priority. Listeners with same priority level will be executed at the same order as they were added (default = 0)\n        * @return {SignalBinding} An Object representing the binding between the Signal and listener.\n        */\n        add: function (listener, listenerContext, priority) {\n            this.validateListener(listener, 'add');\n\n            return this._registerListener(listener, false, listenerContext, priority);\n        },\n\n        /**\n        * Add listener to the signal that should be removed after first execution (will be executed only once).\n        *\n        * @method Signal#addOnce\n        * @param {function} listener - The function to call when this Signal is dispatched.\n        * @param {object} [listenerContext] - The context under which the listener will be executed (i.e. the object that should represent the `this` variable).\n        * @param {number} [priority] - The priority level of the event listener. Listeners with higher priority will be executed before listeners with lower priority. Listeners with same priority level will be executed at the same order as they were added (default = 0)\n        * @return {SignalBinding} An Object representing the binding between the Signal and listener.\n        */\n        addOnce: function (listener, listenerContext, priority) {\n            this.validateListener(listener, 'addOnce');\n\n            return this._registerListener(listener, true, listenerContext, priority);\n        },\n\n        /**\n        * Remove a single listener from the dispatch queue.\n        *\n        * @method Signal#remove\n        * @param {function} listener - Handler function that should be removed.\n        * @param {object} [context] - Execution context (since you can add the same handler multiple times if executing in a different context).\n        * @return {function} Listener handler function.\n        */\n        remove: function (listener, context) {\n            this.validateListener(listener, 'remove');\n\n            var i = this._indexOfListener(listener, context);\n\n            if (i !== -1) {\n                this._bindings[i]._destroy(); //no reason to a SignalBinding exist if it isn't attached to a signal\n                this._bindings.splice(i, 1);\n            }\n\n            return listener;\n        },\n\n        /**\n        * Remove all listeners from the Signal.\n        *\n        * @method Signal#removeAll\n        * @param {object} [context=null] - If specified only listeners for the given context will be removed.\n        */\n        removeAll: function (context) {\n            if (typeof context === 'undefined') { context = null; }\n\n            var n = this._bindings.length;\n\n            while (n--) {\n                if (context) {\n                    if (this._bindings[n].context === context) {\n                        this._bindings[n]._destroy();\n                        this._bindings.splice(n, 1);\n                    }\n                }\n                else {\n                    this._bindings[n]._destroy();\n                }\n            }\n\n            if (!context) {\n                this._bindings.length = 0;\n            }\n        },\n\n        /**\n        * Gets the total number of listeneres attached to ths Signal.\n        *\n        * @method Signal#getNumListeners\n        * @return {number} Number of listeners attached to the Signal.\n        */\n        getNumListeners: function () {\n            return this._bindings.length;\n        },\n\n        /**\n        * Stop propagation of the event, blocking the dispatch to next listeners on the queue.\n        * IMPORTANT: should be called only during signal dispatch, calling it before/after dispatch won't affect signal broadcast.\n        * @see Signal.prototype.disable\n        *\n        * @method Signal#halt\n        */\n        halt: function () {\n            this._shouldPropagate = false;\n        },\n\n        /**\n        * Dispatch/Broadcast Signal to all listeners added to the queue.\n        *\n        * @method Signal#dispatch\n        * @param {any} [params] - Parameters that should be passed to each handler.\n        */\n        dispatch: function () {\n            if (!this.active) {\n                return;\n            }\n\n            var paramsArr = Array.prototype.slice.call(arguments);\n            var n = this._bindings.length;\n            var bindings;\n\n            if (this.memorize) {\n                this._prevParams = paramsArr;\n            }\n\n            if (!n) {\n                //  Should come after memorize\n                return;\n            }\n\n            bindings = this._bindings.slice(); //clone array in case add/remove items during dispatch\n            this._shouldPropagate = true; //in case `halt` was called before dispatch or during the previous dispatch.\n\n            //execute all callbacks until end of the list or until a callback returns `false` or stops propagation\n            //reverse loop since listeners with higher priority will be added at the end of the list\n            do {\n                n--;\n            }\n            while (bindings[n] && this._shouldPropagate && bindings[n].execute(paramsArr) !== false);\n        },\n\n        /**\n        * Forget memorized arguments.\n        * @see Signal.memorize\n        *\n        * @method Signal#forget\n        */\n        forget: function() {\n            this._prevParams = null;\n        },\n\n        /**\n        * Remove all bindings from signal and destroy any reference to external objects (destroy Signal object).\n        * IMPORTANT: calling any method on the signal instance after calling dispose will throw errors.\n        *\n        * @method Signal#dispose\n        */\n        dispose: function () {\n            this.removeAll();\n\n            delete this._bindings;\n            delete this._prevParams;\n        },\n\n        /**\n        *\n        * @method Signal#toString\n        * @return {string} String representation of the object.\n        */\n        toString: function () {\n            return '[Signal active:'+ this.active +' numListeners:'+ this.getNumListeners() +']';\n        }\n\n    };\n\n    Signal.prototype.constructor = Signal;\n\n    vg.Signal = Signal;\n}());\n","/*\n\tA* path-finder based upon http://www.redblobgames.com/pathfinding/a-star/introduction.html\n\t@author Corey Birnbaum https://github.com/vonWolfehaus/\n */\n// 'utils/Tools', 'lib/LinkedList'\nvg.AStarFinder = function(finderConfig) {\n\tfinderConfig = finderConfig || {};\n\n\tvar settings = {\n\t\tallowDiagonal: false,\n\t\theuristicFilter: null\n\t};\n\tsettings = vg.Tools.merge(settings, finderConfig);\n\n\tthis.allowDiagonal = settings.allowDiagonal;\n\tthis.heuristicFilter = settings.heuristicFilter;\n\n\tthis.list = new vg.LinkedList();\n};\n\nvg.AStarFinder.prototype = {\n\t/*\n\t\tFind and return the path.\n\t\t@return Array<Cell> The path, including both start and end positions. Null if it failed.\n\t */\n\tfindPath: function(startNode, endNode, heuristic, grid) {\n\t\tvar current, costSoFar, neighbors, n, i, l;\n\t\theuristic = heuristic || this.heuristicFilter;\n\t\t// clear old values from previous finding\n\t\tgrid.clearPath();\n\t\tthis.list.clear();\n\n\t\t// push the start current into the open list\n\t\tthis.list.add(startNode);\n\n\t\t// while the open list is not empty\n\t\twhile (this.list.length > 0) {\n\t\t\t// sort so lowest cost is first\n\t\t\tthis.list.sort(this.compare);\n\n\t\t\t// pop the position of current which has the minimum `_calcCost` value.\n\t\t\tcurrent = this.list.shift();\n\t\t\tcurrent._visited = true;\n\n\t\t\t// if reached the end position, construct the path and return it\n\t\t\tif (current === endNode) {\n\t\t\t\treturn vg.PathUtil.backtrace(endNode);\n\t\t\t}\n\n\t\t\t// cycle through each neighbor of the current current\n\t\t\tneighbors = grid.getNeighbors(current, this.allowDiagonal, heuristic);\n\t\t\tfor (i = 0, l = neighbors.length; i < l; i++) {\n\t\t\t\tn = neighbors[i];\n\n\t\t\t\tif (!n.walkable) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tcostSoFar = current._calcCost + grid.distance(current, n);\n\n\t\t\t\t// check if the neighbor has not been inspected yet, or can be reached with smaller cost from the current node\n\t\t\t\tif (!n._visited || costSoFar < n._calcCost) {\n\t\t\t\t\tn._visited = true;\n\t\t\t\t\tn._parent = current;\n\t\t\t\t\tn._calcCost = costSoFar;\n\t\t\t\t\t// console.log(n);\n\t\t\t\t\t// _priority is the most important property, since it makes the algorithm \"greedy\" and seek the goal.\n\t\t\t\t\t// otherwise it behaves like a brushfire/breadth-first\n\t\t\t\t\tn._priority = costSoFar + grid.distance(endNode, n);\n\n\t\t\t\t\t// check neighbor if it's the end current as well--often cuts steps by a significant amount\n\t\t\t\t\tif (n === endNode) {\n\t\t\t\t\t\treturn vg.PathUtil.backtrace(endNode);\n\t\t\t\t\t}\n\t\t\t\t\t// console.log(n);\n\t\t\t\t\tthis.list.add(n);\n\t\t\t\t}\n\t\t\t\t// console.log(this.list);\n\t\t\t} // end for each neighbor\n\t\t} // end while not open list empty\n\t\t// failed to find the path\n\t\treturn null;\n\t},\n\n\tcompare: function(nodeA, nodeB) {\n\t\treturn nodeA._priority - nodeB._priority;\n\t}\n};\n\nvg.AStarFinder.prototype.constructor = vg.AStarFinder;","/*\n\t@source https://github.com/qiao/PathFinding.js/\n*/\nvg.PathUtil = {\n\t/**\n\t * Backtrace according to the parent records and return the path.\n\t * (including both start and end nodes)\n\t * @param {Node} node End node\n\t * @return {Array.<Array.<number>>} the path\n\t */\n\tbacktrace: function(node) {\n\t\tvar path = [node];\n\t\twhile (node._parent) {\n\t\t\tnode = node._parent;\n\t\t\tpath.push(node);\n\t\t}\n\t\treturn path.reverse();\n\t},\n\n\t/**\n\t * Backtrace from start and end node, and return the path.\n\t * (including both start and end nodes)\n\t * @param {Node}\n\t * @param {Node}\n\t */\n\tbiBacktrace: function(nodeA, nodeB) {\n\t\tvar pathA = this.backtrace(nodeA),\n\t\t\tpathB = this.backtrace(nodeB);\n\t\treturn pathA.concat(pathB.reverse());\n\t},\n\n\t/**\n\t * Compute the length of the path.\n\t * @param {Array.<Array.<number>>} path The path\n\t * @return {number} The length of the path\n\t */\n\tpathLength: function(path) {\n\t\tvar i, sum = 0, a, b, dx, dy;\n\t\tfor (i = 1; i < path.length; ++i) {\n\t\t\ta = path[i - 1];\n\t\t\tb = path[i];\n\t\t\tdx = a[0] - b[0];\n\t\t\tdy = a[1] - b[1];\n\t\t\tsum += Math.sqrt(dx * dx + dy * dy);\n\t\t}\n\t\treturn sum;\n\t},\n\n\n\t/**\n\t * Given the start and end coordinates, return all the coordinates lying\n\t * on the line formed by these coordinates, based on Bresenham's algorithm.\n\t * http://en.wikipedia.org/wiki/Bresenham's_line_algorithm#Simplification\n\t * @param {number} x0 Start x coordinate\n\t * @param {number} y0 Start y coordinate\n\t * @param {number} x1 End x coordinate\n\t * @param {number} y1 End y coordinate\n\t * @return {Array.<Array.<number>>} The coordinates on the line\n\t */\n\tinterpolate: function(x0, y0, x1, y1) {\n\t\tvar abs = Math.abs,\n\t\t\tline = [],\n\t\t\tsx, sy, dx, dy, err, e2;\n\n\t\tdx = abs(x1 - x0);\n\t\tdy = abs(y1 - y0);\n\n\t\tsx = (x0 < x1) ? 1 : -1;\n\t\tsy = (y0 < y1) ? 1 : -1;\n\n\t\terr = dx - dy;\n\n\t\twhile (x0 !== x1 || y0 !== y1) {\n\t\t\tline.push([x0, y0]);\n\n\t\t\te2 = 2 * err;\n\t\t\tif (e2 > -dy) {\n\t\t\t\terr = err - dy;\n\t\t\t\tx0 = x0 + sx;\n\t\t\t}\n\t\t\tif (e2 < dx) {\n\t\t\t\terr = err + dx;\n\t\t\t\ty0 = y0 + sy;\n\t\t\t}\n\t\t}\n\n\t\treturn line;\n\t},\n\n\n\t/**\n\t * Given a compressed path, return a new path that has all the segments\n\t * in it interpolated.\n\t * @param {Array.<Array.<number>>} path The path\n\t * @return {Array.<Array.<number>>} expanded path\n\t */\n\texpandPath: function(path) {\n\t\tvar expanded = [],\n\t\t\tlen = path.length,\n\t\t\tcoord0, coord1,\n\t\t\tinterpolated,\n\t\t\tinterpolatedLen,\n\t\t\ti, j;\n\n\t\tif (len < 2) {\n\t\t\treturn expanded;\n\t\t}\n\n\t\tfor (i = 0; i < len - 1; ++i) {\n\t\t\tcoord0 = path[i];\n\t\t\tcoord1 = path[i + 1];\n\n\t\t\tinterpolated = this.interpolate(coord0[0], coord0[1], coord1[0], coord1[1]);\n\t\t\tinterpolatedLen = interpolated.length;\n\t\t\tfor (j = 0; j < interpolatedLen - 1; ++j) {\n\t\t\t\texpanded.push(interpolated[j]);\n\t\t\t}\n\t\t}\n\t\texpanded.push(path[len - 1]);\n\n\t\treturn expanded;\n\t},\n\n\n\t/**\n\t * Smoothen the give path.\n\t * The original path will not be modified; a new path will be returned.\n\t * @param {PF.Grid} grid\n\t * @param {Array.<Array.<number>>} path The path\n\t */\n\tsmoothenPath: function(grid, path) {\n\t\tvar len = path.length,\n\t\t\tx0 = path[0][0],        // path start x\n\t\t\ty0 = path[0][1],        // path start y\n\t\t\tx1 = path[len - 1][0],  // path end x\n\t\t\ty1 = path[len - 1][1],  // path end y\n\t\t\tsx, sy,                 // current start coordinate\n\t\t\tex, ey,                 // current end coordinate\n\t\t\tnewPath,\n\t\t\tlastValidCoord,\n\t\t\ti, j, coord, line, testCoord, blocked;\n\n\t\tsx = x0;\n\t\tsy = y0;\n\t\tnewPath = [[sx, sy]];\n\n\t\tfor (i = 2; i < len; ++i) {\n\t\t\tcoord = path[i];\n\t\t\tex = coord[0];\n\t\t\tey = coord[1];\n\t\t\tline = this.interpolate(sx, sy, ex, ey);\n\n\t\t\tblocked = false;\n\t\t\tfor (j = 1; j < line.length; ++j) {\n\t\t\t\ttestCoord = line[j];\n\n\t\t\t\tif (!grid.isWalkableAt(testCoord[0], testCoord[1])) {\n\t\t\t\t\tblocked = true;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (blocked) {\n\t\t\t\tlastValidCoord = path[i - 1];\n\t\t\t\tnewPath.push(lastValidCoord);\n\t\t\t\tsx = lastValidCoord[0];\n\t\t\t\tsy = lastValidCoord[1];\n\t\t\t}\n\t\t}\n\t\tnewPath.push([x1, y1]);\n\n\t\treturn newPath;\n\t},\n\n\n\t/**\n\t * Compress a path, remove redundant nodes without altering the shape\n\t * The original path is not modified\n\t * @param {Array.<Array.<number>>} path The path\n\t * @return {Array.<Array.<number>>} The compressed path\n\t */\n\tcompressPath: function(path) {\n\n\t\t// nothing to compress\n\t\tif (path.length < 3) {\n\t\t\treturn path;\n\t\t}\n\n\t\tvar compressed = [],\n\t\t\tsx = path[0][0], // start x\n\t\t\tsy = path[0][1], // start y\n\t\t\tpx = path[1][0], // second point x\n\t\t\tpy = path[1][1], // second point y\n\t\t\tdx = px - sx, // direction between the two points\n\t\t\tdy = py - sy, // direction between the two points\n\t\t\tlx, ly,\n\t\t\tldx, ldy,\n\t\t\tsq, i;\n\n\t\t// normalize the direction\n\t\tsq = Math.sqrt(dx*dx + dy*dy);\n\t\tdx /= sq;\n\t\tdy /= sq;\n\n\t\t// start the new path\n\t\tcompressed.push([sx,sy]);\n\n\t\tfor (i = 2; i < path.length; i++) {\n\n\t\t\t// store the last point\n\t\t\tlx = px;\n\t\t\tly = py;\n\n\t\t\t// store the last direction\n\t\t\tldx = dx;\n\t\t\tldy = dy;\n\n\t\t\t// next point\n\t\t\tpx = path[i][0];\n\t\t\tpy = path[i][1];\n\n\t\t\t// next direction\n\t\t\tdx = px - lx;\n\t\t\tdy = py - ly;\n\n\t\t\t// normalize\n\t\t\tsq = Math.sqrt(dx*dx + dy*dy);\n\t\t\tdx /= sq;\n\t\t\tdy /= sq;\n\n\t\t\t// if the direction has changed, store the point\n\t\t\tif (dx !== ldx || dy !== ldy) {\n\t\t\t\tcompressed.push([lx,ly]);\n\t\t\t}\n\t\t}\n\n\t\t// store the last point\n\t\tcompressed.push([px,py]);\n\n\t\treturn compressed;\n\t}\n};\n","vg.Loader = {\n\tmanager: null,\n\timageLoader: null,\n\tcrossOrigin: false,\n\n\tinit: function(crossOrigin) {\n\t\tthis.crossOrigin = crossOrigin || false;\n\n\t\tthis.manager = new THREE.LoadingManager(function() {\n\t\t\t// called when all images are loaded, so call your state manager or something\n\t\t}, function() {\n\t\t\t// noop\n\t\t}, function() {\n\t\t\tconsole.warn('Error loading images');\n\t\t});\n\n\t\tthis.imageLoader = new THREE.ImageLoader(this.manager);\n\t\tthis.imageLoader.crossOrigin = crossOrigin;\n\t},\n\n\tloadTexture: function(url, mapping, onLoad, onError) {\n\t\tvar texture = new THREE.Texture(null, mapping);\n\t\tthis.imageLoader.load(url, function(image) { // on load\n\t\t\t\ttexture.image = image;\n\t\t\t\ttexture.needsUpdate = true;\n\t\t\t\tif (onLoad) onLoad(texture);\n\t\t\t},\n\t\t\tnull, // on progress\n\t\t\tfunction (evt) { // on error\n\t\t\t\tif (onError) onError(evt);\n\t\t\t});\n\t\ttexture.sourceFile = url;\n\n\t\treturn texture;\n\t}\n};\n","/*\n\tTranslates mouse interactivity into 3D positions, so we can easily pick objects in the scene.\n\n\tLike everything else in ThreeJS, ray casting creates a ton of new objects each time it's used. This contributes to frequent garbage collections (causing frame hitches), so if you're limited to low-end hardware like mobile, it would be better to only update it when the user clicks, instead of every frame (so no hover effects, but on mobile those don't work anyway). You'll want to create a version that handles touch anyway.\n\n\tgroup - any Object3D (Scene, Group, Mesh, Sprite, etc) that the mouse will cast against\n\tcamera - the camera to cast from\n\t[element] - optional element to attach mouse event to\n\n\t@author Corey Birnbaum https://github.com/vonWolfehaus/\n */\nvg.MouseCaster = function(group, camera, element) {\n\tthis.down = false; // left click\n\tthis.rightDown = false;\n\t// the object that was just clicked on\n\tthis.pickedObject = null;\n\t// the object currently being 'held'\n\tthis.selectedObject = null;\n\t// store the results of the last cast\n\tthis.allHits = null;\n\t// disable the caster easily to temporarily prevent user input\n\tthis.active = true;\n\n\tthis.shift = false;\n\tthis.ctrl = false;\n\tthis.wheel = 0;\n\n\t// you can track exactly where the mouse is in the 3D scene by using the z component\n\tthis.position = new THREE.Vector3();\n\tthis.screenPosition = new THREE.Vector2();\n\tthis.signal = new vg.Signal();\n\tthis.group = group;\n\n\t// behind-the-scenes stuff you shouldn't worry about\n\tthis._camera = camera;\n\tthis._raycaster = new THREE.Raycaster();\n\tthis._preventDefault = false;\n\n\telement = element || document;\n\n\telement.addEventListener('mousemove', this._onDocumentMouseMove.bind(this), false);\n\telement.addEventListener('mousedown', this._onDocumentMouseDown.bind(this), false);\n\telement.addEventListener('mouseup', this._onDocumentMouseUp.bind(this), false);\n\telement.addEventListener('mousewheel', this._onMouseWheel.bind(this), false);\n\telement.addEventListener('DOMMouseScroll', this._onMouseWheel.bind(this), false); // firefox\n};\n\n// statics to describe the events we dispatch\nvg.MouseCaster.OVER = 'over';\nvg.MouseCaster.OUT = 'out';\nvg.MouseCaster.DOWN = 'down';\nvg.MouseCaster.UP = 'up';\nvg.MouseCaster.CLICK = 'click'; // only fires if the user clicked down and up while on the same object\nvg.MouseCaster.WHEEL = 'wheel';\n\nvg.MouseCaster.prototype = {\n\tupdate: function() {\n\t\tif (!this.active) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis._raycaster.setFromCamera(this.screenPosition, this._camera);\n\n\t\tvar intersects = this._raycaster.intersectObject(this.group, true);\n\t\tvar hit, obj;\n\n\t\tif (intersects.length > 0) {\n\t\t\t// get the first object under the mouse\n\t\t\thit = intersects[0];\n\t\t\tobj = hit.object.userData.structure;\n\t\t\tif (this.pickedObject != obj) {\n\t\t\t\t// the first object changed, meaning there's a different one, or none at all\n\t\t\t\tif (this.pickedObject) {\n\t\t\t\t\t// it's a new object, notify the old object is going away\n\t\t\t\t\tthis.signal.dispatch(vg.MouseCaster.OUT, this.pickedObject);\n\t\t\t\t}\n\t\t\t\t/*else {\n\t\t\t\t\t// hit a new object when nothing was there previously\n\t\t\t\t}*/\n\t\t\t\tthis.pickedObject = obj;\n\t\t\t\tthis.selectedObject = null; // cancel click, otherwise it'll confuse the user\n\n\t\t\t\tthis.signal.dispatch(vg.MouseCaster.OVER, this.pickedObject);\n\t\t\t}\n\t\t\tthis.position.copy(hit.point);\n\t\t\tthis.screenPosition.z = hit.distance;\n\t\t}\n\t\telse {\n\t\t\t// there isn't anything under the mouse\n\t\t\tif (this.pickedObject) {\n\t\t\t\t// there was though, we just moved out\n\t\t\t\tthis.signal.dispatch(vg.MouseCaster.OUT, this.pickedObject);\n\t\t\t}\n\t\t\tthis.pickedObject = null;\n\t\t\tthis.selectedObject = null;\n\t\t}\n\n\t\tthis.allHits = intersects;\n\t},\n\n\tpreventDefault: function() {\n\t\tthis._preventDefault = true;\n\t},\n\n\t_onDocumentMouseDown: function(evt) {\n\t\tevt = evt || window.event;\n\t\tevt.preventDefault();\n\t\tif (this._preventDefault) {\n\t\t\tthis._preventDefault = false;\n\t\t\treturn false;\n\t\t}\n\t\tif (this.pickedObject) {\n\t\t\tthis.selectedObject = this.pickedObject;\n\t\t}\n\t\tthis.shift = evt.shiftKey;\n\t\tthis.ctrl = evt.ctrlKey;\n\n\t\tthis.down = evt.which === 1;\n\t\tthis.rightDown = evt.which === 3;\n\n\t\tthis.signal.dispatch(vg.MouseCaster.DOWN, this.pickedObject);\n\t},\n\n\t_onDocumentMouseUp: function(evt) {\n\t\tevt.preventDefault();\n\t\tif (this._preventDefault) {\n\t\t\tthis._preventDefault = false;\n\t\t\treturn false;\n\t\t}\n\t\tthis.shift = evt.shiftKey;\n\t\tthis.ctrl = evt.ctrlKey;\n\n\t\tthis.signal.dispatch(vg.MouseCaster.UP, this.pickedObject);\n\t\tif (this.selectedObject && this.pickedObject && this.selectedObject.uniqueID === this.pickedObject.uniqueID) {\n\t\t\tthis.signal.dispatch(vg.MouseCaster.CLICK, this.pickedObject);\n\t\t}\n\n\t\tthis.down = evt.which === 1 ? false : this.down;\n\t\tthis.rightDown = evt.which === 3 ? false : this.rightDown;\n\t},\n\n\t_onDocumentMouseMove: function(evt) {\n\t\tevt.preventDefault();\n\t\tthis.screenPosition.x = (evt.clientX / window.innerWidth) * 2 - 1;\n\t\tthis.screenPosition.y = -(evt.clientY / window.innerHeight) * 2 + 1;\n\t},\n\n\t_onMouseWheel: function(evt) {\n\t\tif (!this.active) {\n\t\t\treturn;\n\t\t}\n\t\tevt.preventDefault();\n\t\tevt.stopPropagation();\n\n\t\tvar delta = 0;\n\t\tif (evt.wheelDelta !== undefined) { // WebKit / Opera / Explorer 9\n\t\t\tdelta = evt.wheelDelta;\n\t\t}\n\t\telse if (evt.detail !== undefined) { // Firefox\n\t\t\tdelta = -evt.detail;\n\t\t}\n\t\tif (delta > 0) {\n\t\t\tthis.wheel++;\n\t\t}\n\t\telse {\n\t\t\tthis.wheel--;\n\t\t}\n\t\t// console.log(this.wheel);\n\t\tthis.signal.dispatch(vg.MouseCaster.WHEEL, this.wheel);\n\t}\n};\n\nvg.MouseCaster.prototype.constructor = vg.MouseCaster;\n","/*\n\tSets up and manages a THREEjs container, camera, and light, making it easy to get going.\n\tAlso provides camera control.\n\n\tAssumes full screen.\n */\n// 'utils/Tools'\nvg.Scene = function(sceneConfig, controlConfig) {\n\tvar sceneSettings = {\n\t\telement: document.body,\n\t\talpha: true,\n\t\tantialias: true,\n\t\tclearColor: '#fff',\n\t\tsortObjects: false,\n\t\tfog: null,\n\t\tlight: new THREE.DirectionalLight(0xffffff),\n\t\tlightPosition: null,\n\t\tcameraType: 'PerspectiveCamera',\n\t\tcameraPosition: null, // {x, y, z}\n\t\torthoZoom: 4\n\t};\n\n\tvar controlSettings = {\n\t\tminDistance: 100,\n\t\tmaxDistance: 1000,\n\t\tzoomSpeed: 2,\n\t\tnoZoom: false\n\t};\n\n\tsceneSettings = vg.Tools.merge(sceneSettings, sceneConfig);\n\tif (typeof controlConfig !== 'boolean') {\n\t\tcontrolSettings = vg.Tools.merge(controlSettings, controlConfig);\n\t}\n\n\tthis.renderer = new THREE.WebGLRenderer({\n\t\talpha: sceneSettings.alpha,\n\t\tantialias: sceneSettings.antialias\n\t});\n\tthis.renderer.setClearColor(sceneSettings.clearColor, 0);\n\tthis.renderer.sortObjects = sceneSettings.sortObjects;\n\n\tthis.width = window.innerWidth;\n\tthis.height = window.innerHeight;\n\n\tthis.orthoZoom = sceneSettings.orthoZoom;\n\n\tthis.container = new THREE.Scene();\n\tthis.container.fog = sceneSettings.fog;\n\n\tthis.container.add(new THREE.AmbientLight(0xdddddd));\n\n\tif (!sceneSettings.lightPosition) {\n\t\tsceneSettings.light.position.set(-1, 1, -1).normalize();\n\t}\n\tthis.container.add(sceneSettings.light);\n\n\tif (sceneSettings.cameraType === 'OrthographicCamera') {\n\t\tvar width = window.innerWidth / this.orthoZoom;\n\t\tvar height = window.innerHeight / this.orthoZoom;\n\t\tthis.camera = new THREE.OrthographicCamera(width / -2, width / 2, height / 2, height / -2, 1, 5000);\n\t}\n\telse {\n\t\tthis.camera = new THREE.PerspectiveCamera(50, this.width / this.height, 1, 5000);\n\t}\n\n\tthis.contolled = !!controlConfig;\n\tif (this.contolled) {\n\t\tthis.controls = new THREE.OrbitControls(this.camera, this.renderer.domElement);\n\t\tthis.controls.minDistance = controlSettings.minDistance;\n\t\tthis.controls.maxDistance = controlSettings.maxDistance;\n\t\tthis.controls.zoomSpeed = controlSettings.zoomSpeed;\n\t\tthis.controls.noZoom = controlSettings.noZoom;\n\t}\n\n\tif (sceneSettings.cameraPosition) {\n\t\tthis.camera.position.copy(sceneSettings.cameraPosition);\n\t}\n\n\twindow.addEventListener('resize', function onWindowResize() {\n\t\tthis.width = window.innerWidth;\n\t\tthis.height = window.innerHeight;\n\t\tif (this.camera.type === 'OrthographicCamera') {\n\t\t\tvar width = this.width / this.orthoZoom;\n\t\t\tvar height = this.height / this.orthoZoom;\n\t\t\tthis.camera.left = width / -2;\n\t\t\tthis.camera.right = width / 2;\n\t\t\tthis.camera.top = height / 2;\n\t\t\tthis.camera.bottom = height / -2;\n\t\t}\n\t\telse {\n\t\t\tthis.camera.aspect = this.width / this.height;\n\t\t}\n\t\tthis.camera.updateProjectionMatrix();\n\t\tthis.renderer.setSize(this.width, this.height);\n\t}.bind(this), false);\n\n\tthis.attachTo(sceneSettings.element);\n};\n\nvg.Scene.prototype = {\n\n\tattachTo: function(element) {\n\t\telement.style.width = this.width + 'px';\n\t\telement.style.height = this.height + 'px';\n\t\tthis.renderer.setPixelRatio(window.devicePixelRatio);\n\t\tthis.renderer.setSize(this.width, this.height);\n\t\telement.appendChild(this.renderer.domElement);\n\t},\n\n\tadd: function(mesh) {\n\t\tthis.container.add(mesh);\n\t},\n\n\tremove: function(mesh) {\n\t\tthis.container.remove(mesh);\n\t},\n\n\trender: function() {\n\t\tif (this.contolled) this.controls.update();\n\t\tthis.renderer.render(this.container, this.camera);\n\t},\n\n\tupdateOrthoZoom: function() {\n\t\tif (this.orthoZoom <= 0) {\n\t\t\tthis.orthoZoom = 0;\n\t\t\treturn;\n\t\t}\n\t\tvar width = this.width / this.orthoZoom;\n\t\tvar height = this.height / this.orthoZoom;\n\t\tthis.camera.left = width / -2;\n\t\tthis.camera.right = width / 2;\n\t\tthis.camera.top = height / 2;\n\t\tthis.camera.bottom = height / -2;\n\t\tthis.camera.updateProjectionMatrix();\n\t},\n\n\tfocusOn: function(obj) {\n\t\tthis.camera.lookAt(obj.position);\n\t}\n};\n\nvg.Scene.prototype.constructor = vg.Scene;\n","// 'utils/Tools', 'lib/LinkedList', 'utils/MouseCaster', 'lib/Signal'\nvg.SelectionManager = function(mouse) {\n\tthis.mouse = mouse;\n\n\tthis.onSelect = new vg.Signal();\n\tthis.onDeselect = new vg.Signal();\n\n\tthis.selected = null;\n\t// deselect if player clicked on the same thing twice\n\tthis.toggleSelection = false;\n\n\t// allow multiple entities to be selected at once\n\t// this.multiselect = false; // todo\n\t// this.allSelected = new LinkedList();\n\n\tthis.mouse.signal.add(this.onMouse, this);\n}\n\nvg.SelectionManager.prototype = {\n\tselect: function(obj, fireSignal) {\n\t\tif (!obj) return;\n\t\tfireSignal = fireSignal || true;\n\n\t\tif (this.selected !== obj) {\n\t\t\t// deselect previous object\n\t\t\tthis.clearSelection(fireSignal);\n\t\t}\n\t\tif (obj.selected) {\n\t\t\tif (this.toggleSelection) {\n\t\t\t\tif (fireSignal) {\n\t\t\t\t\tthis.onDeselect.dispatch(obj);\n\t\t\t\t}\n\t\t\t\tobj.deselect();\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\tobj.select();\n\t\t}\n\n\t\tthis.selected = obj;\n\t\tif (fireSignal) {\n\t\t\tthis.onSelect.dispatch(obj);\n\t\t}\n\t},\n\n\tclearSelection: function(fireSignal) {\n\t\tfireSignal = fireSignal || true;\n\t\tif (this.selected) {\n\t\t\tif (fireSignal) {\n\t\t\t\tthis.onDeselect.dispatch(this.selected);\n\t\t\t}\n\t\t\tthis.selected.deselect();\n\t\t}\n\t\tthis.selected = null;\n\t},\n\n\tonMouse: function(type, obj) {\n\t\tswitch (type) {\n\t\t\tcase vg.MouseCaster.DOWN:\n\t\t\t\tif (!obj) {\n\t\t\t\t\tthis.clearSelection();\n\t\t\t\t}\n\t\t\t\tbreak;\n\n\t\t\tcase vg.MouseCaster.CLICK:\n\t\t\t\tthis.select(obj);\n\t\t\t\tbreak;\n\t\t}\n\t}\n};\n\nvg.SelectionManager.prototype.constructor = vg.SelectionManager;\n","vg.Tools = {\n\tclamp: function(val, min, max) {\n\t\treturn Math.max(min, Math.min(max, val));\n\t},\n\n\tsign: function(val) {\n\t\treturn val && val / Math.abs(val);\n\t},\n\n\t/**\n\t * If one value is passed, it will return something from -val to val.\n\t * Else it returns a value between the range specified by min, max.\n\t */\n\trandom: function(min, max) {\n\t\tif (arguments.length === 1) {\n\t\t\treturn (Math.random() * min) - (min * 0.5);\n\t\t}\n\t\treturn Math.random() * (max - min) + min;\n\t},\n\n\t// from min to (and including) max\n\trandomInt: function(min, max) {\n\t\tif (arguments.length === 1) {\n\t\t\treturn (Math.random() * min) - (min * 0.5) | 0;\n\t\t}\n\t\treturn (Math.random() * (max - min + 1) + min) | 0;\n\t},\n\n\tnormalize: function(v, min, max) {\n\t\treturn (v - min) / (max - min);\n\t},\n\n\tgetShortRotation: function(angle) {\n\t\tangle %= this.TAU;\n\t\tif (angle > this.PI) {\n\t\t\tangle -= this.TAU;\n\t\t}\n\t\telse if (angle < -this.PI) {\n\t\t\tangle += this.TAU;\n\t\t}\n\t\treturn angle;\n\t},\n\n\tgenerateID: function() {\n\t\treturn Math.random().toString(36).slice(2) + Date.now();\n\t},\n\n\tisPlainObject: function(obj) {\n\t\tif (typeof(obj) !== 'object' || obj.nodeType || obj === obj.window) {\n\t\t\treturn false;\n\t\t}\n\t\t// The try/catch suppresses exceptions thrown when attempting to access the 'constructor' property of certain host objects, ie. |window.location|\n\t\t// https://bugzilla.mozilla.org/show_bug.cgi?id=814622\n\t\ttry {\n\t\t\tif (obj.constructor && !Object.prototype.hasOwnProperty.call(obj.constructor.prototype, 'isPrototypeOf')) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t\tcatch (err) {\n\t\t\treturn false;\n\t\t}\n\t\t// If the function hasn't returned already, we're confident that\n\t\t// |obj| is a plain object, created by {} or constructed with new Object\n\t\treturn true;\n\t},\n\n\t// https://github.com/KyleAMathews/deepmerge/blob/master/index.js\n\tmerge: function(target, src) {\n\t\tvar self = this, array = Array.isArray(src);\n\t\tvar dst = array && [] || {};\n\t\tif (array) {\n\t\t\ttarget = target || [];\n\t\t\tdst = dst.concat(target);\n\t\t\tsrc.forEach(function(e, i) {\n\t\t\t\tif (typeof dst[i] === 'undefined') {\n\t\t\t\t\tdst[i] = e;\n\t\t\t\t}\n\t\t\t\telse if (self.isPlainObject(e)) {\n\t\t\t\t\tdst[i] = self.merge(target[i], e);\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tif (target.indexOf(e) === -1) {\n\t\t\t\t\t\tdst.push(e);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\t\t\treturn dst;\n\t\t}\n\t\tif (target && self.isPlainObject(target)) {\n\t\t\tObject.keys(target).forEach(function (key) {\n\t\t\t\tdst[key] = target[key];\n\t\t\t});\n\t\t}\n\t\tObject.keys(src).forEach(function (key) {\n\t\t\tif (!src[key] || !self.isPlainObject(src[key])) {\n\t\t\t\tdst[key] = src[key];\n\t\t\t}\n\t\t\telse {\n\t\t\t\tif (!target[key]) {\n\t\t\t\t\tdst[key] = src[key];\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tdst[key] = self.merge(target[key], src[key]);\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t\treturn dst;\n\t},\n\n\tnow: function() {\n\t\treturn window.nwf ? window.nwf.system.Performance.elapsedTime : window.performance.now();\n\t},\n\n\tempty: function(node) {\n\t\twhile (node.lastChild) {\n\t\t\tnode.removeChild(node.lastChild);\n\t\t}\n\t},\n\n\t/*\n\t\t@source: http://jsperf.com/radix-sort\n\t */\n\tradixSort: function(arr, idxBegin, idxEnd, bit) {\n\t\tidxBegin = idxBegin || 0;\n\t\tidxEnd = idxEnd || arr.length;\n\t\tbit = bit || 31;\n\t\tif (idxBegin >= (idxEnd - 1) || bit < 0) {\n\t\t\treturn;\n\t\t}\n\t\tvar idx = idxBegin;\n\t\tvar idxOnes = idxEnd;\n\t\tvar mask = 0x1 << bit;\n\t\twhile (idx < idxOnes) {\n\t\t\tif (arr[idx] & mask) {\n\t\t\t\t--idxOnes;\n\t\t\t\tvar tmp = arr[idx];\n\t\t\t\tarr[idx] = arr[idxOnes];\n\t\t\t\tarr[idxOnes] = tmp;\n\t\t\t}\n\t\t\telse {\n\t\t\t\t++idx;\n\t\t\t}\n\t\t}\n\t\tthis.radixSort(arr, idxBegin, idxOnes, bit-1);\n\t\tthis.radixSort(arr, idxOnes, idxEnd, bit-1);\n\t},\n\n\trandomizeRGB: function(base, range) {\n\t\tvar rgb = base.split(',');\n\t\tvar color = 'rgb(';\n\t\tvar i, c;\n\t\trange = this.randomInt(range);\n\t\tfor (i = 0; i < 3; i++) {\n\t\t\tc = parseInt(rgb[i]) + range;\n\t\t\tif (c < 0) c = 0;\n\t\t\telse if (c > 255) c = 255;\n\t\t\tcolor += c + ',';\n\t\t}\n\t\tcolor = color.substring(0, color.length-1);\n\t\tcolor += ')';\n\t\treturn color;\n\t},\n\n\tgetJSON: function(config) {\n\t\tvar xhr = new XMLHttpRequest();\n\t\tvar cache = typeof config.cache === 'undefined' ? false : config.cache;\n\t\tvar uri = cache ? config.url : config.url + '?t=' + Math.floor(Math.random() * 10000) + Date.now();\n\t\txhr.onreadystatechange = function() {\n\t\t\tif (this.status === 200) {\n\t\t\t\tvar json = null;\n\t\t\t\ttry {\n\t\t\t\t\tjson = JSON.parse(this.responseText);\n\t\t\t\t}\n\t\t\t\tcatch (err) {\n\t\t\t\t\t// console.warn('[Tools.getJSON] Error: '+config.url+' is not a json resource');\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tconfig.callback.call(config.scope || null, json);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\telse if (this.status !== 0) {\n\t\t\t\tconsole.warn('[Tools.getJSON] Error: '+this.status+' ('+this.statusText+') :: '+config.url);\n\t\t\t}\n\t\t}\n\t\txhr.open('GET', uri, true);\n\t\txhr.setRequestHeader('Accept', 'application/json');\n\t\txhr.setRequestHeader('Content-Type', 'application/json');\n\t\txhr.send('');\n\t}\n};\n"]}